<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="exceptionHandling"
             type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" />
    <section name="loggingConfiguration"
             type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging"/>
    <section name="unity"
             type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration"/>
  </configSections>
  <connectionStrings>
  <add name="VmDb"
        connectionString="Data Source=.\sqlexpress;Initial Catalog=VideoMall;Integrated Security=True"
        providerName="System.Data.SqlClient"/>   
  </connectionStrings>
  <system.web>
    <membership defaultProvider="SqlMembershipProvider">
      <providers>
        <add name="SqlMembershipProvider"
              type="System.Web.Security.SqlMembershipProvider, System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
              connectionStringName="VmDb"
              applicationName="VideoMall"/>
      </providers>
    </membership>
  </system.web>  
  <system.serviceModel>
    <extensions>
      <behaviorExtensions>
        <add name="iocIntegration" type="Artech.VideoMall.Common.Extensions.IoCIntegrationBehaviorElement, Artech.VideoMall.Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
        <add name="exceptionHandling" type="Artech.VideoMall.Common.Extensions.ExceptionHandlingBehaviorElement, Artech.VideoMall.Common, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
      </behaviorExtensions>
    </extensions>   
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <iocIntegration/>
          <exceptionHandling exceptionPolicy="service"/>
        </behavior>
      </serviceBehaviors>
    </behaviors>
  </system.serviceModel>
  <unity>
    <alias alias="IProductsService" type="Artech.VideoMall.Products.Service.Interface.IProductsService, Artech.VideoMall.Products.Service.Interface" />
    <alias alias="ProductsService" type="Artech.VideoMall.Products.Service.ProductsService, Artech.VideoMall.Products.Service" />
    <alias alias="DbHelper" type="Artech.VideoMall.Common.DbHelper, Artech.VideoMall.Common" />
    <alias alias="SqlDbHelper" type="Artech.VideoMall.Common.SqlDbHelper, Artech.VideoMall.Common" />
    <alias alias="Singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity" />
    <container>
      <register type="IProductsService" mapTo="ProductsService"/>
      <register type="DbHelper" mapTo="SqlDbHelper">
        <lifetime type="Singleton"/>
        <constructor>
          <param name="connectionStringName">
            <value value="VmDb"/>
          </param>
        </constructor>
      </register>
    </container>
  </unity>
  <loggingConfiguration tracingEnabled="true" defaultCategory="Exception">
    <listeners>
      <add name="Flat File Trace Listener"
           type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.FlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging"
           listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.FlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging"
           fileName="trace.log"
           traceOutputOptions="LogicalOperationStack, DateTime, Timestamp, ProcessId, ThreadId, Callstack" />
    </listeners>
    <formatters>
      <add type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging"
          template="Timestamp: {timestamp}{newline}&#xA;Message: {message}{newline}&#xA;Category: {category}{newline}&#xA;Priority: {priority}{newline}&#xA;EventId: {eventid}{newline}&#xA;Severity: {severity}{newline}&#xA;Title:{title}{newline}&#xA;Machine: {localMachine}{newline}&#xA;App Domain: {localAppDomain}{newline}&#xA;ProcessId: {localProcessId}{newline}&#xA;Process Name: {localProcessName}{newline}&#xA;Thread Name: {threadName}{newline}&#xA;Win32 ThreadId:{win32ThreadId}{newline}&#xA;Extended Properties: {dictionary({key} - {value}{newline})}"
          name="Text Formatter" />
    </formatters>
    <categorySources>
      <add switchValue="All" name="Exception">
        <listeners>
          <add name="Flat File Trace Listener" />
        </listeners>
      </add>
    </categorySources>
    <specialSources>
      <allEvents switchValue="All" name="All Events" />
      <notProcessed switchValue="All" name="Unprocessed Category" />
      <errors switchValue="All" name="Logging Errors &amp; Warnings">
        <listeners>
          <add name="Flat File Trace Listener" />
        </listeners>
      </errors>
    </specialSources>
  </loggingConfiguration>
  <exceptionHandling>
    <exceptionPolicies>
      <add name="service">
        <exceptionTypes>
          <add name="System.Exception"
               type="System.Exception, mscorlib"
               postHandlingAction="ThrowNewException">
            <exceptionHandlers>
              <add name="Logging Exception Handler"
                   type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler,Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging"
                   logCategory="Exception"
                   eventId="100"
                   severity="Error"
                   title="Enterprise Library Exception Handling"
                   formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling"
                   priority="0" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
    </exceptionPolicies>
  </exceptionHandling>
</configuration>